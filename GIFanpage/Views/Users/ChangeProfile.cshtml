@model GIFanpage.Models.User

@{
    ViewBag.Title = "ChangeProfile";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>

    .change-img {
        display: flex;
        justify-content: center;
        align-items: center;
    }

    .img-wrapper > img {
        display: block;
        aspect-ratio: 1/1;
        object-fit: cover;
        object-position: center;
    }

    label {
        font-weight:bolder;
    }
</style>


<div class="container m-4 p-4 mx-auto">
    <div class="row">
        <div class="col-md-12">
            <div class="card">
                <div class="row py-3">
                </div>
                <div class="container px-5">

                    <h2 class="text-primary">Change User Profile</h2>

                    <hr />
                </div>
                <div class="col-md-12">
                    <form action="/users/changeProfile" method="post" enctype="multipart/form-data">
                        @Html.AntiForgeryToken()
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        @Html.HiddenFor(model => model.UserID)
                        <div class="row">
                            <div class="col-md-5">
                                <div class="change-img p-4">
                                    <div class="img-wrapper">
                                        <img src="@Url.Content(Model.UserImg)" width="200" class="bd-placeholder-img rounded-circle" id="previewImage" />
                                    </div>
                                </div>
                                <div class="change-img">
                                    <label for="changeImage" class="btn btn-success"><i class="fa fa-download" aria-hidden="true"></i> Choose an image</label>
                                    <input type="file" name="ImageUpload" onchange="ShowImagePreview(this, document.getElementById('previewImage'))" id="changeImage" required hidden />
                                </div>
                            </div>
                            <div class="col-md-7">
                                <div class="card-body px-4 p-sm-4">

                                    <label for="floatingInputUsername">Username</label>
                                    <input type="text" name="Name" class="form-control" id="floatingInputUsername" value="@Model.Name" required /><br />
                                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })


                                    <label for="floatingInputEmail">Email address</label>
                                    <input type="email" name="Email" class="form-control" id="floatingInputEmail" value="@Model.Email" /> <br />
                                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })


                                    <label for="floatingPassword">Password</label>
                                    <input type="password" name="PasswordHash" class="form-control" id="floatingPassword" value="@Model.PasswordHash"> <br />
                                    @Html.ValidationMessageFor(model => model.PasswordHash, "", new { @class = "text-danger" })




                                    <div class="row">
                                        <div class="col-md-5">

                                            <label for="floatingPasswordConfirm">Playstyle</label>
                                            @Html.DropDownList("PlaystyleID", null, htmlAttributes: new { @class = "list-group-item col-md-12" })
                                            @Html.ValidationMessageFor(model => model.PlaystyleID, "", new { @class = "text-danger" })
                                            <input type="text" name="PlaystyleID" class="form-control" id="floatingPasswordConfirm" placeholder="Your style" hidden>

                                        </div>
                                        <div class="col-md-2"></div>
                                        <div class="col-md-5">

                                            <label for="floatingPasswordConfirm">Role</label>
                                            <p class="pt-1"> @Model.Role.RoleName</p>

                                            @if (@Model.Role.RoleID == 1)
                                            {
                                                @Html.TextBoxFor(t => t.RoleID, new { @Value = 1, @type = "hidden" })
                                                @Html.ValidationMessageFor(model => model.RoleID, "", new { @class = "text-danger" })
                                            }
                                            else
                                            {
                                                @Html.TextBoxFor(t => t.RoleID, new { @Value = 2, @type = "hidden" })
                                                @Html.ValidationMessageFor(model => model.RoleID, "", new { @class = "text-danger" })
                                            }

                                        </div>
                                    </div>

                                    <div class="row">
                                        <div class="col-md-3">
                                            <div class="d-grid my-3 col-md-12" style="padding-left:unset;">
                                                <a>
                                                    <button class="btn btn-primary btn-login fw-bold" type="submit"><i class="fa fa-floppy-o" aria-hidden="true"></i> Save</button>
                                                </a>
                                            </div>
                                        </div>
                                        <div class="col-md-4">
                                            <div class="d-grid my-3 col-md-12" style="padding-left:unset;">

                                            </div>
                                        </div>
                                    </div>



                                </div>
                            </div>
                        </div>

                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

@*@using (Html.BeginForm("ChangeProfile", "Users", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.UserID)
            @Html.HiddenFor(model => model.UserImg)

            <div class="form-group">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.PasswordHash, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.PasswordHash, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PasswordHash, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.UserImg, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.UserImg, new { htmlAttributes = new { @class = "form-control" } })
                    <img src="@Url.Content(Model.UserImg)" style="height: 200px; margin: 10px" id="previewImage" />
                    <input type="file" name="ImageUpload" required onchange="ShowImagePreview(this, document.getElementById('previewImage'))" />
                    @Html.ValidationMessageFor(model => model.UserImg, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.PlaystyleID, "PlaystyleID", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("PlaystyleID", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.PlaystyleID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.RoleID, "RoleID", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("RoleID", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.RoleID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-default" />
                </div>
            </div>
        </div>
    }*@



@*@section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }*@
